<script type="text/x-template" id="contacts-tpl">
    <v-data-table :headers="headers"
                  :items="items"
                  :options.sync="options"
                  :server-items-length="totalItems"
                  :loading="loading"
                  class="elevation-1">

        <template v-slot:top>
            <v-toolbar flat color="white">
                <v-toolbar-title>Contacts</v-toolbar-title>
                @*<v-divider class="mx-4" insert vertical></v-divider>*@
                <v-spacer></v-spacer>
                <v-text-field v-model="search"
                              v-on:keyup.enter="searchEntered"
                              append-icon="mdi-magnify"
                              label="Search"
                              single-line
                              hide-details></v-text-field>
                <v-spacer></v-spacer>

                <v-btn color="primary" dar class="mb-2" v-on:click="view()">Add</v-btn>

            </v-toolbar>
        </template>

        <template v-slot:item.action="{ item }">
            <v-icon small class="mr-2" v-on:click="view(item)">mdi-pencil</v-icon>
        </template>
        <template v-slot:no-data>
            <v-btn color="primary" v-on:click="getData()">Reset</v-btn>
        </template>
    </v-data-table>
</script>

<script>
    Vue.component('contacts-component', {
        props: ['customerid'],
        template: '#contacts-tpl',
        data() {
            return {
                items: [],
                totalItems: 0,
                loading: true,
                options: {
                    page: 1,
                    itemPerPage: 10,
                    sortBy: ['firstName'],
                    sortDesc: [false],
                    groupBy: [],
                    groupDesc: [],
                    multiSort: false,
                    mustSort: false,
                    customerId: customerid,
                    search: ''
                },
                search: '',
                headers: [
                    { text: 'First Name', value: 'firstName' },
                    { text: 'Last Name', value: 'lastName' },
                    { text: 'Title', value: 'title' },
                    { text: 'Email', value: 'email' },
                    { text: 'Phone', value: 'Phone' },
                    { text: 'Action', value: 'action', sortable: false }
                ]
            }
        },
        watch: {
            options: {
                handler() {
                    this.getData();
                }
            },
        },
        methods: {

            getData () {
                this.loading = true;
                axios
                    .post('@Url.Action("LoadData", "Contacts")', this.options)
                    .then(response => {
                        this.items = response.data.result.data;
                        this.totalItems = response.data.result.total;
                        this.loading = false;
                        //console.log(response.data.result.data);
                    });
            },

            searchEntered() {
                this.options.search = this.search;

                if (this.options.search.length == 0) {
                    this.getData();
                }
            },

            view(item) {
                console.log('item', item);

                var id = '';

                if (item && item.id) {
                    id = item.id;
                }

                location.href = '@Url.Action("Upsert", "Contacts")' + '/' + id;
            }
        }
    })
</script>