
@{
    ViewData["Title"] = "Upsert Contact";

    var id = ViewBag.id;
    var customer_id = ViewBag.customer_id;
}

<div id="appDiv">
    <v-app>
        <partial name="~/Views/Shared/_Alert.cshtml" />

        <v-card>
            
            <v-container>

                <v-tabs>
                    <v-tab>Contact</v-tab>                    
                    <v-tab v-if="model.id.length > 0">Tickets</v-tab>

                    <v-tab-item>
                        <v-form v-model="valid" ref="form" lazy-validation>

                            <v-text-field v-model="model.title"
                                          :rules="titleRules"
                                          :counter="100"
                                          label="Title">
                            </v-text-field>

                            <v-text-field v-model="model.firstName"
                                          :rules="firstNameRules"
                                          :counter="100"
                                          label="First Name">
                            </v-text-field>

                            <v-text-field v-model="model.lastName"
                                          :rules="lastNameRules"
                                          :counter="100"
                                          label="Last Name">
                            </v-text-field>

                            <v-text-field v-model="model.email"
                                          :rules="emailRules"
                                          :counter="100"
                                          label="Email">
                            </v-text-field>

                            <v-text-field v-model="model.phone"
                                          :rules="phoneRules"
                                          :counter="50"
                                          label="Phone">
                            </v-text-field>

                            <v-btn color="primary"
                                   class="mr-4"
                                   v-on:click="save"
                                   :disabled="isBusy">Save</v-btn>

                        </v-form>
                    </v-tab-item>                    
                    <v-tab-item v-if="model.id.length > 0">
                        tickets
                    </v-tab-item>
                </v-tabs>


                
            </v-container>
        </v-card>

    </v-app>
</div>

<script>
    new Vue({
        el: '#appDiv',
        vuetify: new Vuetify(),
        data: {
            model: {
                id: '',
                name: '',
                address1: '',
                address2: '',
                city: '',
                state: '',
                zip: '',
                country: '',
                phone: '',
                customerId: ''
            },
            customer_id: '',
            titleRules: [
                v => !!v || 'Title is required',
                v => v.length <= 100 || 'Title must be less than 101 characters'
            ],
            firstNameRules: [
                v => !!v || 'First Name is required',
                v => v.length <= 100 || 'First Name must be less than 101 characters'
            ],
            lastNameRules: [
                v => !!v || 'Last Name is required',
                v => v.length <= 100 || 'Last Name must be less than 101 characters'
            ],
            emailRules: [
                v => !!v || 'Email is required',
                v => v.length <= 100 || 'Email must be less than 101 characters'
            ],
            phoneRules: [
                v => !!v || 'Phone is required',
                v => v.length <= 50 || 'Phone must be less than 51 characters'
            ],
            valid: false,
            isBusy: false,
            showAlert: false,
            alertMsg: "",
            alertColor: '',
            alertTimeout: 6000,


        },
        computed: {

        },
        watch: {
            options: {
                handler() {
                    this.getData();
                }
            },

        },
        created() {
            var id = '@id';
            var customer_id = '@customer_id';

            if (id.length > 0) {
                this.load(id);
            }

            if (customer_id.length > 0) {
                this.model.customerId = customer_id;
            }
        },
        methods: {

            load(id) {
                axios
                    .get('@Url.Action("GetData", "Contacts")' + '?id=' + id)
                    .then(response => {
                        if (response.data) {
                            console.log('load', response.data);
                            this.model = response.data.result;
                        }
                    });
            },

            save(e) {
                this.isBusy = true;
                e.preventDefault();
                var vm = this;

                axios.post('@Url.Action("UpsertData", "Contacts")', this.model)
                    .then(function (response) {

                        if (response.data.result != null) {
                            vm.alertColor = "success";
                            vm.alertMsg = "Saved";
                            vm.alertTimeout = 6000;
                            vm.showAlert = true;

                            // reload contact upsert page
                            var href = '@Url.Action("Upsert", "Contacts")' + "?id=" + response.data.result.id;
                            window.location.href = href;
                        }
                        else {
                            vm.alertColor = "purple";
                            vm.alertMsg = "Error";
                            vm.alertTimeout = 6000;
                            vm.showAlert = true;
                        }
                    })
                    .catch(function (error) {
                        console.log(error);
                        vm.alertColor = "purple";
                        vm.alertMsg = "Error";
                        vm.alertTimeout = 6000;
                        vm.showAlert = true;

                    })
                    .finally(() => this.isBusy = false)
            },


        }
    })
</script>

