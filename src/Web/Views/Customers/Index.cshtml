@{
    ViewData["Title"] = "Customers";
}

<div id="appDiv">
    <v-app>

        <partial name="~/Views/Shared/_Alert.cshtml" />

        <v-data-table :headers="headers"
                      :items="items"
                      :options.sync="options"
                      :server-items-length="totalItems"
                      :loading="loading"
                      class="elevation-1">

            <template v-slot:top>
                <v-toolbar flat color="white">
                    <v-toolbar-title>Customers</v-toolbar-title>
                    @*<v-divider class="mx-4" insert vertical></v-divider>*@
                    <v-spacer></v-spacer>
                    <v-text-field v-model="search"
                                  v-on:keyup.enter="searchEntered"
                                  append-icon="mdi-magnify"
                                  label="Search"
                                  single-line
                                  hide-details></v-text-field>
                    <v-spacer></v-spacer>
                </v-toolbar>
            </template>

            <template v-slot:item.action="{ item }">
                <v-icon small class="mr-2" v-on:click="view(item)">mdi-pencil</v-icon>
            </template>
            <template v-slot:no-data>
                <v-btn color="primary" v-on:click="getData()">Reset</v-btn>
            </template>
        </v-data-table>
    </v-app>
</div>

<script>
    new Vue({
        el: '#appDiv',
        vuetify: new Vuetify(),
        data: {
            items: [],
            totalItems: 0,
            loading: true,
            showAlert: false,
            alertMsg: "",
            alertColor: '',
            alertTimeout: 6000,
            options: {
                page: 1,
                itemPerPage: 10,
                sortBy: ['name'],
                sortDesc: [false],
                groupBy: [],
                groupDesc: [],
                multiSort: false,
                mustSort: false,
                search: ''
            },
            search: '',
            headers: [
                { text: 'Name', value: 'name' },
                { text: 'Address1', value: 'address1' },
                { text: 'City', value: 'city' },
                { text: 'State', value: 'state' },
                { text: 'Action', value: 'action', sortable: false }
            ]
        },
        computed: {

        },
        watch: {
            options: {
                handler() {
                    this.getData();
                }
            },

        },
        created() {
            //this.getData();
        },
        methods: {

            getData () {
                this.loading = true;
                axios
                    .post('@Url.Action("LoadData", "Customers")', this.options)
                    .then(response => {
                        this.items = response.data.result.data;
                        this.totalItems = response.data.result.total;
                        this.loading = false;
                        //console.log(response.data.result.data);
                    });
            },

            searchEntered() {
                this.options.search = this.search;

                if (this.options.search.length == 0) {
                    this.getData();
                }
            },

            view(item) {
                location.href = '@Url.Action("Upsert", "Customers")' + '/' + item.id;
            }
        }
    })
</script>