<script type="text/x-template" id="custom-attribute-tpl">

    <v-btn color="primary" v-on:click="count++">{{count}}</v-btn>

    @*<v-simple-table>
        <template v-slot:default>
            <thead>
                <tr>
                    <th class="text-left">
                        Attribute Name
                        <v-icon small
                                v-on:click="addAttr"
                                v-if="!editedAttr">mdi-plus</v-icon>
                    </th>
                    <th class="text-left">Attribute Value</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <tr v-for="item in customAttributes" :key="item.id">
                    <td v-if="!editedAttr || editedAttr.id != item.id">{{ item.name }}</td>
                    <td v-if="editedAttr && item.id == editedAttr.id">
                        <v-text-field v-model="editedAttr.name"
                                        :counter="50"
                                        label="Name"
                                        :rules="[v => !!v || 'Name is required']"
                                        required></v-text-field>
                    </td>
                    <td v-if="!editedAttr || editedAttr.id != item.id">{{ item.value }}</td>
                    <td v-if="editedAttr && item.id == editedAttr.id">
                        <v-text-field v-model="editedAttr.value"
                                        :counter="50"
                                        label="Value"
                                        :rules="[v => !!v || 'Value is required']"
                                        required></v-text-field>
                    </td>
                    <td>
                        <v-icon small class="mr-2"
                                v-if="!editedAttr"
                                v-on:click="editAttr(item)">mdi-pencil</v-icon>
                        <v-icon small class="mr-2"
                                v-if="editedAttr && editedAttr.id == item.id"
                                v-on:click="updateAttr()">mdi-content-save</v-icon>
                        <v-icon small
                                v-if="editedAttr && editedAttr.id == item.id"
                                v-on:click="cancelAttr()">mdi-cancel</v-icon>
                        <v-icon small
                                v-if="!editedAttr"
                                v-on:click="removeAttr(item)">mdi-delete</v-icon>
                    </td>
                </tr>
            </tbody>
        </template>
    </v-simple-table>*@
</script>

<script>
    Vue.component('custom-attribute-component', {
        props: ['customAttributes'],
        template: '#custom-attribute-tpl',

        data() {
            return {
                count: 0
            }
        },

        methods: {

        }
    })
</script>

@*<script>
    Vue.component('custom-attribute-component', {
        props: ['customAttributes'],
        template: '#custom-attribute-tpl',
        methods: {
            addAttr() {
                this.editedAttr = {
                    id: this.getGuid(),
                    name: '',
                    value: ''
                };

                this.editedItem.customAttributes.push(Object.assign({}, this.editedAttr));
            },

            editAttr(attr) {
                this.editedAttr = Object.assign({}, attr)
            },

            updateAttr() {

                for (var i = 0; i < this.editedItem.customAttributes.length; i++) {
                    if (this.editedItem.customAttributes[i].id == this.editedAttr.id) {
                        this.editedItem.customAttributes[i] = Object.assign({}, this.editedAttr);
                        break;
                    }
                }

                this.editedAttr = null;
            },

            cancelAttr() {
                this.editedAttr = null;
            },

            removeAttr(attr) {
                var index = this.editedItem.customAttributes.indexOf(attr);
                this.editedItem.customAttributes.splice(index, 1);
            },

            getGuid() {
                return ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>
                    (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)
                );
            },
        }
    })
</script>*@